def solution(n, tops):
    dp = [[0, 0, 0, 0] for _ in range(n)]
    if tops[0] == 1:
        dp[0] = [1, 1, 1, 1]
    else:
        dp[0] = [1, 0, 1, 1]

    for i in range(1, n):
        # 삼각형으로 덮을때
        dp[i][0] = (dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][2] + dp[i - 1][3]) % 10007
        # 마름모로 덮을때
        if tops[i] == 1:
            dp[i][1] = (dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][2] + dp[i - 1][3]) % 10007
        # 왼쪽 삼각형이 있는걸로 덮을때 -> 오 덮고 왼 안됨, 왼덮고 오 됨.
        dp[i][2] = (dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][2] + dp[i-1][3]) % 10007
        # 오른쪽 삼각형이 있는걸로 덮을때
        dp[i][3] = (dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][3]) % 10007

    return sum(dp[-1]) % 10007