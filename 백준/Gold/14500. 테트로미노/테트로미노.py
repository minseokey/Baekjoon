import sys

Y, X = map(int, sys.stdin.readline().split())
lis = [[int(i) for i in sys.stdin.readline().split()] for j in range(Y)]

# dp = []
ans = 0

tetris = [[(0, 0), (0, 1), (0, 2), (0, 3)],
          [(0, 0), (1, 0), (2, 0), (3, 0)],
          [(0, 0), (1, 0), (0, 1), (1, 1)],
          [(0, 0), (1, 0), (2, 0), (2, 1)],
          [(0, 1), (1, 1), (2, 1), (2, 0)],
          [(0, 0), (0, 1), (1, 1), (2, 1)],
          [(0, 0), (0, 1), (1, 0), (2, 0)],
          [(0, 0), (1, 0), (1, 1), (1, 2)],
          [(0, 2), (1, 1), (1, 2), (1, 0)],
          [(0, 0), (0, 1), (0, 2), (1, 2)],
          [(0, 0), (1, 0), (0, 1), (0, 2)],
          [(0, 0), (1, 0), (1, 1), (2, 1)],
          [(0, 1), (1, 1), (1, 0), (2, 0)],
          [(1, 0), (1, 1), (0, 1), (0, 2)],
          [(0, 0), (0, 1), (1, 1), (1, 2)],
          [(0, 1), (1, 0), (1, 1), (1, 2)],
          [(0, 0), (0, 1), (0, 2), (1, 1)],
          [(0, 0), (1, 0), (1, 1), (2, 0)],
          [(0, 1), (1, 1), (1, 0), (2, 1)]]

for i in range(Y):
    for j in range(X):
        for k in tetris:
            temp = 0

            # templis = []
            for q in k:
                if 0 <= i + q[0] < Y and 0 <= j + q[1] < X:
                    temp += lis[i + q[0]][j + q[1]]
                    # templis.append([[i + q[0]],[j + q[1]]])
                else:
                    temp = 0
                    # templis = []
                    break

            ans = max(ans, temp)
            # dp.append(templis)

print(ans)